#include<iostream>
#include<conio.h>
#include<math.h>
#include<Windows.h>
#include<time.h>
using namespace std;
using namespace System;

void Asterisco(int cantidad) {
	ConsoleColor color;
	for (int i = 0; i < cantidad; i++) {
		color =ConsoleColor::Red;
		Console::ForegroundColor = color;
		cout << "*";
	}
}
void LogoUPC(int x, int y) {
	Console::SetCursorPosition(x + 40, y);
	Asterisco(1);
	Console::SetCursorPosition(x + 39, y+1);
	Asterisco(1);
	Console::SetCursorPosition(x + 38, y + 2);
	Asterisco(2);
	Console::SetCursorPosition(x + 37, y + 3);
	Asterisco(3);
	Console::SetCursorPosition(x + 32, y + 4);
	Asterisco(1);
	Console::SetCursorPosition(x + 38, y + 4);
	Asterisco(2);
	Console::SetCursorPosition(x + 49, y + 4);
	Asterisco(1);
	Console::SetCursorPosition(x + 37, y + 5);
	Asterisco(4);
	Console::SetCursorPosition(x + 29, y + 6);
	Asterisco(1);
	Console::SetCursorPosition(x + 37, y + 6);
	Asterisco(4);
	Console::SetCursorPosition(x + 50, y + 6);
	Asterisco(1);
	Console::SetCursorPosition(x + 29, y + 7);
	Asterisco(1);
	Console::SetCursorPosition(x + 36, y + 7);
	Asterisco(5);
	Console::SetCursorPosition(x + 50, y + 7);
	Asterisco(1);
	Console::SetCursorPosition(x + 28, y + 8);
	Asterisco(2);
	Console::SetCursorPosition(x + 37, y + 8);
	Asterisco(5);
	Console::SetCursorPosition(x + 50, y + 8);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 9);
	Asterisco(2);
	Console::SetCursorPosition(x + 37, y + 9);
	Asterisco(5);
	Console::SetCursorPosition(x + 50, y + 9);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 10);
	Asterisco(2);
	Console::SetCursorPosition(x + 38, y + 10);
	Asterisco(5);
	Console::SetCursorPosition(x + 50, y + 10);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 11);
	Asterisco(2);
	Console::SetCursorPosition(x + 38, y + 11);
	Asterisco(6);
	Console::SetCursorPosition(x + 50, y + 11);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 12);
	Asterisco(3);
	Console::SetCursorPosition(x + 39, y + 12);
	Asterisco(5);
	Console::SetCursorPosition(x + 50, y + 12);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 13);
	Asterisco(3);
	Console::SetCursorPosition(x + 40, y + 13);
	Asterisco(5);
	Console::SetCursorPosition(x + 49, y + 13);
	Asterisco(3);
	Console::SetCursorPosition(x + 28, y + 14);
	Asterisco(3);
	Console::SetCursorPosition(x + 40, y + 14);
	Asterisco(5);
	Console::SetCursorPosition(x + 49, y + 14);
	Asterisco(2);
	Console::SetCursorPosition(x + 28, y + 15);
	Asterisco(3);
	Console::SetCursorPosition(x + 40, y + 15);
	Asterisco(4);
	Console::SetCursorPosition(x + 48, y + 15);
	Asterisco(3);
	Console::SetCursorPosition(x + 29, y + 16);
	Asterisco(3);
	Console::SetCursorPosition(x + 40, y + 16);
	Asterisco(3);
	Console::SetCursorPosition(x + 47, y + 16);
	Asterisco(3);
	Console::SetCursorPosition(x + 29, y + 17);
	Asterisco(4);
	Console::SetCursorPosition(x + 40, y + 17);
	Asterisco(3);
	Console::SetCursorPosition(x + 47, y + 17);
	Asterisco(2);
	Console::SetCursorPosition(x + 30, y + 18);
	Asterisco(4);
	Console::SetCursorPosition(x + 39, y + 18);
	Asterisco(3);
	Console::SetCursorPosition(x + 46, y + 18);
	Asterisco(2);
	Console::SetCursorPosition(x + 31, y + 19);
	Asterisco(4);
	Console::SetCursorPosition(x + 38, y + 19);
	Asterisco(2);
	Console::SetCursorPosition(x + 44, y + 19);
	Asterisco(3);
	Console::SetCursorPosition(x + 32, y + 20);
	Asterisco(14);
	Console::SetCursorPosition(x + 33, y + 21);
	Asterisco(12);
	Console::SetCursorPosition(x + 34, y + 22);
	Asterisco(10);
	Console::SetCursorPosition(x + 36, y + 23);
	Asterisco(6);
}
void cambiarColor(int x) {
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), x);
}
void pixel(int n, int color) {
	cambiarColor(color);
	for (int i = 0; i < n; i++) {
		cout << char(219);
	}
}
void Ese(int x, int y) {
	while (true) {
		int n = 1 + rand() % 8;
		Console::SetCursorPosition(x, y);
		pixel(10, n);
		Console::SetCursorPosition(x, y + 1);
		pixel(10, n);
		Console::SetCursorPosition(x, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x, y + 5);
		pixel(10, n);
		Console::SetCursorPosition(x, y + 6);
		pixel(10, n);
		Console::SetCursorPosition(x + 7, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 7, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 7, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x, y + 10);
		pixel(10, n);
		Console::SetCursorPosition(x, y + 11);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y + 1);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 5);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y + 6);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 14, y + 10);
		pixel(10, n);
		Console::SetCursorPosition(x + 14, y + 11);
		pixel(10, n);

		Console::SetCursorPosition(x + 28, y);
		pixel(10, n);
		Console::SetCursorPosition(x + 28, y + 1);
		pixel(10, n);
		Console::SetCursorPosition(x + 28, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 5);
		pixel(10, n);
		Console::SetCursorPosition(x + 28, y + 6);
		pixel(10, n);
		Console::SetCursorPosition(x + 28, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 28, y + 10);
		pixel(10, n);
		Console::SetCursorPosition(x + 28, y + 11);
		pixel(10, n);

		Console::SetCursorPosition(x + 42, y);
		pixel(10, n);
		Console::SetCursorPosition(x + 42, y + 1);
		pixel(10, n);
		Console::SetCursorPosition(x + 42, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 5);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 6);
		pixel(3, n);
		Console::SetCursorPosition(x + 47, y + 6);
		pixel(5, n);
		Console::SetCursorPosition(x + 47, y + 7);
		pixel(5, n);
		Console::SetCursorPosition(x + 49, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 49, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 42, y + 10);
		pixel(10, n);
		Console::SetCursorPosition(x + 42, y + 11);
		pixel(10, n);

		Console::SetCursorPosition(x + 56, y);
		pixel(10, n);
		Console::SetCursorPosition(x + 56, y + 1);
		pixel(10, n);
		Console::SetCursorPosition(x + 56, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 5);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 6);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 10);
		pixel(3, n);
		Console::SetCursorPosition(x + 56, y + 11);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 2);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 3);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 4);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 5);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 6);
		pixel(3, n);
		Console::SetCursorPosition(x + 59, y + 6);
		pixel(4, n);
		Console::SetCursorPosition(x + 59, y + 7);
		pixel(4, n);
		Console::SetCursorPosition(x + 63, y + 7);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 8);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 9);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 10);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 11);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 10);
		pixel(3, n);
		Console::SetCursorPosition(x + 63, y + 11);
		pixel(3, n);

	}
}
int main() {
	srand(time(NULL));
	Console::SetWindowSize(100, 44);
	ConsoleColor CambiarColor;
	//LogoUPC(50, 5);
	Ese(10, 0);
	/*SEEGA(7, 0);*/
	_getch();
}  